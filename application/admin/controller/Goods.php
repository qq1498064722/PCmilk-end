<?php
	
	
	namespace app\admin\controller;
	
	
	use think\Controller;
	use think\Db;
	
		class Goods extends Controller
	{
//		 public function _initialize()
////		 {
////			 parent::_initialize(); // TODO: Change the autogenerated stub
////		 }
////
		public function openinsert(){
		 	$cate=Db::table('cate')->order('cid','asc')->select();
		 	$this->assign('cate',$cate);
		 	return $this->fetch();
		 }
		 public function insert(){
			 $method=$this->request->method();
			 if($method!='POST'){
				 return json(['code'=>404,'msg'=>'请求方式错误']);
			 }
			 $data=input('post.');
			 date_default_timezone_set('PRC');
			 $data['create_time']=date('Y-m-d h:i:s');
//			 验证规则
			 $validate =validate('Goods');
			
			 if(!$validate->scene('insert')->check($data)){
				 return json(['code'=>404,'msg'=>$validate->getError()]);
			 }
			 $result=Db::table('goods') ->insert($data);
			 if($result>0){
				 return json(['code'=>200,'msg'=>'数据插入成功']);
			 }
			 else{
				 return json(['code'=>404,'msg'=>'数据插入失败']);
			 }
		 }
	
		 
//		 渲染数据
		
		public function index(){
		 	$cate=Db::table('cate')->select();
		 	$this->assign('cates',$cate);
			return $this->fetch();
		}
		
		
	public function query(){
//		 	1.总数  2.当前页码数据 select * from goods order by gid limit offset,length

//		搜索条件：点击搜索按钮
//		
		$qs=$this->request->get();
		$where=[];
		
		if(isset($qs['cid'])&& $qs['cid']){
			$where['cid']=$qs['cid'];
		}
		if(isset($qs['gname'])&& !empty($qs['gname'])){
			
			   $where['gid']=['like',"%{$qs['gname']}%"];
		}
		if(isset($qs['gprice_min']) && isset($qs['gprice_max']) && ($qs['gprice_max']>=$qs['gprice_min'])){
			 $where['gprice']=['between',[$qs['gprice_min'],$qs['gprice_max']]];
		}
	
		$page=$qs['page'];
		$limit=$qs['limit'];
		$count=Db::table('goods')->where($where)->count();
//		$data=Db::table('goods')->where($where)->limit($offset,$limit)->select();
		$data=Db::table('goods')->where($where)->page($page,$limit)->select();
		return json(
			['code'=>0,
				'msg'=>'success',
				'count'=>$count,
				'data'=>$data,
			
			]);
	}
	
	public function delete(){
		$method=$this->request->method();
		if($method!='POST'){
			return json(['code'=>404,'msg'=>'请求方式错误']);
		}
		$data=input('post.');
		$validate =validate('Goods');
		if(!$validate->scene('delete')->check($data)){
			return json(['code'=>404,'msg'=>$validate->getError()]);
		}
		$result=Db::table('goods')->where('gid',$data['gid'])->delete();
		if($result>0){
			return json(['code'=>200,'msg'=>'数据删除成功']);
		}
		else{
			return json(['code'=>404,'msg'=>'数据删除失败']);
		}
	}
	
	public function update(){
		 	    return $this->fetch();
	}
	
	
	}